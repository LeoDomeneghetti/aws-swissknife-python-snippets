{
    "boto3": {
        "scope": "python",
        "prefix": "boto3",
        "description": "Import boto3",
        "body": "import boto3"
    },
    "s3client": {
        "scope": "python",
        "prefix": "s3client",
        "description": "S3 client",
        "body": "s3 = boto3.client('s3')"
    },
    "s3createbucket": {
        "scope": "python",
        "prefix": "s3createbucket",
        "description": "S3 create bucket",
        "body": [
            "response = s3.create_bucket(",
            "    ACL='private'|'public-read'|'public-read-write'|'authenticated-read',",
            "    Bucket='string', #REQUIRED",
            "    CreateBucketConfiguration={",
            "        'LocationConstraint': 'EU'|'eu-west-1'|'us-west-1'|'us-west-2'|'ap-south-1'|'ap-southeast-1'|'ap-southeast-2'|'ap-northeast-1'|'sa-east-1'|'cn-north-1'|'eu-central-1'",
            "    },",
            "    GrantFullControl='string',",
            "    GrantRead='string',",
            "    GrantReadACP='string',",
            "    GrantWrite='string',",
            "    GrantWriteACP='string',",
            "    ObjectLockEnabledForBucket=True|False",
            ")"
        ]
    },
    "s3listbuckets": {
        "scope": "python",
        "prefix": "s3listbuckets",
        "description": "S3 list all buckets",
        "body": [
            "response = s3.list_buckets()"
        ]
    },
    "s3deletebucket": {
        "scope": "python",
        "prefix": "s3deletebucket",
        "description": "S3 delete a bucket",
        "body": [
            "response = s3.delete_bucket(",
            "    Bucket='string'",
            ")"
        ]
    },
    "s3listobjects": {
        "scope": "python",
        "prefix": "s3listobjects",
        "description": "S3 list all objects in a bucket",
        "body": [
            "response = s3.list_objects_v2(",
            "    Bucket='string', #REQUIRED",
            "    Delimiter='string',",
            "    EncodingType='url',",
            "    MaxKeys=123,",
            "    Prefix='string',",
            "    ContinuationToken='string',",
            "    FetchOwner=True|False,",
            "    StartAfter='string',",
            "    RequestPayer='requester'",
            ")"
        ]
    },
    "s3putobject": {
        "scope": "python",
        "prefix": "s3putobject",
        "description": "S3 put a object into your bucket",
        "body": [
            "with open('filepath', 'rb') as f:",
            "   response = s3.upload_fileobj(f, Bucket='string', Key='string')"
        ]
    },
    "s3getobject": {
        "scope": "python",
        "prefix": "s3getobject",
        "description": "S3 get a object from your bucket",
        "body": [
            "with open('filepath', 'wb') as f:",
            "   response = s3.download_fileobj(Bucket='string', Key='string', f)"
        ]
    },
    
    "ddbclient": {
        "scope": "python",
        "prefix": "ddbclient",
        "description": "DynamoDB client",
        "body": [
            "ddb = boto3.client('dynamodb')"
        ]
    },
    "ddbcreatetable": {
        "scope": "python",
        "prefix": "ddbcreatetable",
        "description": "DynamoDB create a table",
        "body": [
            "response = ddb.create_table(",
            "    AttributeDefinitions=[",
            "        {",
            "            'AttributeName': 'string',",
            "            'AttributeType': 'S'|'N'|'B'",
            "        },",
            "    ],",
            "    TableName='string',",
            "    KeySchema=[",
            "        {",
            "            'AttributeName': 'string',",
            "            'KeyType': 'HASH'|'RANGE'",
            "        },",
            "    ],",
            "    LocalSecondaryIndexes=[",
            "        {",
            "            'IndexName': 'string',",
            "            'KeySchema': [",
            "                {",
            "                    'AttributeName': 'string',",
            "                    'KeyType': 'HASH'|'RANGE'",
            "                },",
            "            ],",
            "            'Projection': {",
            "                'ProjectionType': 'ALL'|'KEYS_ONLY'|'INCLUDE',",
            "                'NonKeyAttributes': [",
            "                    'string',",
            "                ]",
            "            }",
            "        },",
            "    ],",
            "    GlobalSecondaryIndexes=[",
            "        {",
            "            'IndexName': 'string',",
            "            'KeySchema': [",
            "                {",
            "                    'AttributeName': 'string',",
            "                    'KeyType': 'HASH'|'RANGE'",
            "                },",
            "            ],",
            "            'Projection': {",
            "                'ProjectionType': 'ALL'|'KEYS_ONLY'|'INCLUDE',",
            "                'NonKeyAttributes': [",
            "                    'string',",
            "                ]",
            "            },",
            "            'ProvisionedThroughput': {",
            "                'ReadCapacityUnits': 123,",
            "                'WriteCapacityUnits': 123",
            "            }",
            "        },",
            "    ],",
            "    BillingMode='PROVISIONED'|'PAY_PER_REQUEST',",
            "    ProvisionedThroughput={",
            "        'ReadCapacityUnits': 123,",
            "        'WriteCapacityUnits': 123",
            "    },",
            "    StreamSpecification={",
            "        'StreamEnabled': True|False,",
            "        'StreamViewType': 'NEW_IMAGE'|'OLD_IMAGE'|'NEW_AND_OLD_IMAGES'|'KEYS_ONLY'",
            "    },",
            "    SSESpecification={",
            "        'Enabled': True|False,",
            "        'SSEType': 'AES256'|'KMS',",
            "        'KMSMasterKeyId': 'string'",
            "    },",
            "    Tags=[",
            "        {",
            "            'Key': 'string',",
            "            'Value': 'string'",
            "        },",
            "    ]",
            ")"
        ]
    }
}